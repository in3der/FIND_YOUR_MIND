// Generated by view binder compiler. Do not edit!
package com.example.find_your_mind.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.find_your_mind.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConnectingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView callEnd;

  @NonNull
  public final TextView connecting;

  @NonNull
  public final TextView description1;

  @NonNull
  public final TextView description2;

  @NonNull
  public final LinearLayout iconlist1;

  @NonNull
  public final LinearLayout iconlist2;

  @NonNull
  public final LinearLayout icons;

  @NonNull
  public final ConstraintLayout main;

  private ActivityConnectingBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView callEnd,
      @NonNull TextView connecting, @NonNull TextView description1, @NonNull TextView description2,
      @NonNull LinearLayout iconlist1, @NonNull LinearLayout iconlist2, @NonNull LinearLayout icons,
      @NonNull ConstraintLayout main) {
    this.rootView = rootView;
    this.callEnd = callEnd;
    this.connecting = connecting;
    this.description1 = description1;
    this.description2 = description2;
    this.iconlist1 = iconlist1;
    this.iconlist2 = iconlist2;
    this.icons = icons;
    this.main = main;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConnectingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConnectingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_connecting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConnectingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.call_end;
      ImageView callEnd = ViewBindings.findChildViewById(rootView, id);
      if (callEnd == null) {
        break missingId;
      }

      id = R.id.connecting;
      TextView connecting = ViewBindings.findChildViewById(rootView, id);
      if (connecting == null) {
        break missingId;
      }

      id = R.id.description1;
      TextView description1 = ViewBindings.findChildViewById(rootView, id);
      if (description1 == null) {
        break missingId;
      }

      id = R.id.description2;
      TextView description2 = ViewBindings.findChildViewById(rootView, id);
      if (description2 == null) {
        break missingId;
      }

      id = R.id.iconlist1;
      LinearLayout iconlist1 = ViewBindings.findChildViewById(rootView, id);
      if (iconlist1 == null) {
        break missingId;
      }

      id = R.id.iconlist2;
      LinearLayout iconlist2 = ViewBindings.findChildViewById(rootView, id);
      if (iconlist2 == null) {
        break missingId;
      }

      id = R.id.icons;
      LinearLayout icons = ViewBindings.findChildViewById(rootView, id);
      if (icons == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      return new ActivityConnectingBinding((ConstraintLayout) rootView, callEnd, connecting,
          description1, description2, iconlist1, iconlist2, icons, main);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
