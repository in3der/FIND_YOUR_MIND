// Generated by view binder compiler. Do not edit!
package com.example.find_your_mind.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.find_your_mind.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPopUpMessageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView number1;

  @NonNull
  public final TextView number2;

  @NonNull
  public final TextView string1;

  @NonNull
  public final TextView string2;

  private ActivityPopUpMessageBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout main, @NonNull TextView number1, @NonNull TextView number2,
      @NonNull TextView string1, @NonNull TextView string2) {
    this.rootView = rootView;
    this.main = main;
    this.number1 = number1;
    this.number2 = number2;
    this.string1 = string1;
    this.string2 = string2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPopUpMessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPopUpMessageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pop_up_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPopUpMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.number1;
      TextView number1 = ViewBindings.findChildViewById(rootView, id);
      if (number1 == null) {
        break missingId;
      }

      id = R.id.number2;
      TextView number2 = ViewBindings.findChildViewById(rootView, id);
      if (number2 == null) {
        break missingId;
      }

      id = R.id.string1;
      TextView string1 = ViewBindings.findChildViewById(rootView, id);
      if (string1 == null) {
        break missingId;
      }

      id = R.id.string2;
      TextView string2 = ViewBindings.findChildViewById(rootView, id);
      if (string2 == null) {
        break missingId;
      }

      return new ActivityPopUpMessageBinding((ConstraintLayout) rootView, main, number1, number2,
          string1, string2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
